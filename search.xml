<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java反序列化回显学习</title>
      <link href="/2023/03/12/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%9B%9E%E6%98%BE%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/12/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%9B%9E%E6%98%BE%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>最近写工具，碰到反序列化漏洞无法回显的问题，想着写篇文章学习下 Java 回显技术。</p><p>先鸽着，有时间再写。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反射dll注入实现</title>
      <link href="/2023/03/06/%E5%8F%8D%E5%B0%84dll%E6%B3%A8%E5%85%A5%E5%AE%9E%E7%8E%B0/"/>
      <url>/2023/03/06/%E5%8F%8D%E5%B0%84dll%E6%B3%A8%E5%85%A5%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>最近拜读倾旋大佬博客时，看到通过反射 dll 注入技术进行免杀。后面了解了下 dll 注入技术，发现在实战中进行免杀应用还是具有很大前景的，于是就写了这篇文章。</p><h3 id="二、常规-dll-注入技术"><a href="#二、常规-dll-注入技术" class="headerlink" title="二、常规 dll 注入技术"></a>二、常规 dll 注入技术</h3><p>翻看网上教程，了解到常规的 dll 注入技术需要使用到 <code>LoadLibrary()</code>函数来使注入进程加载指定的 dll，由于指定的 dll 需存储在受害者主机本地，所以很容易被检测到。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 域渗透，免杀 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
